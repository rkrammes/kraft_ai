{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrammes/kraft_ai/src/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from './theme';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppComponent = App;\nconst container = document.getElementById('root');\nif (!container) {\n  throw new Error('Root container not found');\n}\nconst root = ReactDOM.createRoot(container);\nfunction Root() {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  const theme = darkMode ? darkTheme : lightTheme;\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(AppComponent, {\n        darkMode: darkMode,\n        setDarkMode: setDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Root, \"D2+2tCNohYwQ9K/tGnxPgGRQSlM=\");\n_c = Root;\nroot.render(/*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"names":["React","useState","ReactDOM","ThemeProvider","darkTheme","lightTheme","App","jsxDEV","_jsxDEV","AppComponent","container","document","getElementById","Error","root","createRoot","Root","_s","darkMode","setDarkMode","theme","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","render","$RefreshReg$"],"sources":["/Users/ryankrammes/kraft_ai/src/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from './theme';\nimport App from './App';\n\ninterface AppProps {\n  darkMode: boolean;\n  setDarkMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst AppComponent = App as React.FC<AppProps>;\n\nconst container = document.getElementById('root');\nif (!container) {\n  throw new Error('Root container not found');\n}\nconst root = ReactDOM.createRoot(container);\n\nfunction Root(): React.ReactElement {\n  const [darkMode, setDarkMode] = useState(false);\n  const theme = darkMode ? darkTheme : lightTheme;\n\n  return (\n    <React.StrictMode>\n      <ThemeProvider theme={theme}>\n        <AppComponent darkMode={darkMode} setDarkMode={setDarkMode} />\n      </ThemeProvider>\n    </React.StrictMode>\n  );\n}\n\nroot.render(<Root />);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,SAAS,EAAEC,UAAU,QAAQ,SAAS;AAC/C,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxB,MAAMC,YAAY,GAAGH,GAAyB;AAE9C,MAAMI,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACjD,IAAI,CAACF,SAAS,EAAE;EACd,MAAM,IAAIG,KAAK,CAAC,0BAA0B,CAAC;AAC7C;AACA,MAAMC,IAAI,GAAGZ,QAAQ,CAACa,UAAU,CAACL,SAAS,CAAC;AAE3C,SAASM,IAAIA,CAAA,EAAuB;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMmB,KAAK,GAAGF,QAAQ,GAAGd,SAAS,GAAGC,UAAU;EAE/C,oBACEG,OAAA,CAACR,KAAK,CAACqB,UAAU;IAAAC,QAAA,eACfd,OAAA,CAACL,aAAa;MAACiB,KAAK,EAAEA,KAAM;MAAAE,QAAA,eAC1Bd,OAAA,CAACC,YAAY;QAACS,QAAQ,EAAEA,QAAS;QAACC,WAAW,EAAEA;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEvB;AAACT,EAAA,CAXQD,IAAI;AAAAW,EAAA,GAAJX,IAAI;AAabF,IAAI,CAACc,MAAM,cAACpB,OAAA,CAACQ,IAAI;EAAAO,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAC,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}