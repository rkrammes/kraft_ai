{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrammes/kraft_ai/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport RecipeIteration from './components/RecipeIteration';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [editMode, setEditMode] = useState(false);\n  const [session, setSession] = useState(null);\n  const handleEditToggle = e => {\n    setEditMode(e.target.checked);\n  };\n  const handleLogout = async () => {\n    try {\n      const {\n        error\n      } = await supabase.auth.signOut();\n      if (error) {\n        console.error('Error signing out:', error);\n      } else {\n        alert('You have been logged out.');\n      }\n    } catch (err) {\n      console.error('Unexpected error during logout:', err);\n    }\n  };\n  useEffect(() => {\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      setSession(session);\n    });\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      setSession(session);\n    });\n    return () => {\n      authListener.subscription.unsubscribe();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [session ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert('No login flow in single-page mode!'),\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Edit Mode:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: editMode,\n            onChange: handleEditToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(RecipeIteration, {\n        editMode: editMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xfHvSYy0fk1AJb2I/hr9ah3U9ak=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","supabase","RecipeIteration","jsxDEV","_jsxDEV","App","_s","editMode","setEditMode","session","setSession","handleEditToggle","e","target","checked","handleLogout","error","auth","signOut","console","alert","err","getSession","then","data","authListener","onAuthStateChange","event","subscription","unsubscribe","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/Users/ryankrammes/kraft_ai/src/App.js"],"sourcesContent":["// @flow\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport RecipeIteration from './components/RecipeIteration';\n\nfunction App(): React$Node {\n  const [editMode, setEditMode] = useState(false);\n  const [session, setSession] = useState(null);\n\n  const handleEditToggle = (e) => {\n    setEditMode(e.target.checked);\n  };\n\n  const handleLogout = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) {\n        console.error('Error signing out:', error);\n      } else {\n        alert('You have been logged out.');\n      }\n    } catch (err) {\n      console.error('Unexpected error during logout:', err);\n    }\n  };\n\n  useEffect(() => {\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n    });\n    const { data: authListener } = supabase.auth.onAuthStateChange(\n      (event, session) => {\n        setSession(session);\n      }\n    );\n    return () => {\n      authListener.subscription.unsubscribe();\n    };\n  }, []);\n\n  return (\n    <div>\n      <header>\n        <nav>\n          {session ? (\n            <button onClick={handleLogout}>Log Out</button>\n          ) : (\n            <button onClick={() => alert('No login flow in single-page mode!')}>\n              Log In\n            </button>\n          )}\n          <label>\n            Edit Mode:\n            <input\n              type=\"checkbox\"\n              checked={editMode}\n              onChange={handleEditToggle}\n            />\n          </label>\n        </nav>\n      </header>\n      <main>\n        <RecipeIteration editMode={editMode} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}