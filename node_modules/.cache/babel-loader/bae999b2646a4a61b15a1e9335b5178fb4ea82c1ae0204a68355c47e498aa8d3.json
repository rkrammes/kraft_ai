{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrammes/kraft_ai/src/components/RecipeIteration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EditableTable from './EditableTable';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecipeIteration({\n  editMode\n}) {\n  _s();\n  // For AI iteration text\n  const [iterationText, setIterationText] = useState('');\n  // For possible category selection\n  const [selectedCategory, setSelectedCategory] = useState('Beard Oil 7');\n  const [message, setMessage] = useState(null);\n\n  // Example AI suggestion call\n  const handleGetAiSuggestion = async () => {\n    try {\n      const response = await fetch('https://example.com/ai-suggest', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: iterationText\n        })\n      });\n      const data = await response.json();\n      setIterationText(data.suggestion || '');\n    } catch (err) {\n      console.error('Error fetching AI suggestion:', err);\n      setMessage(`Error: ${err.message}`);\n    }\n  };\n\n  // Example commit logic to store iteration notes\n  const handleCommit = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('Iteration_Notes').insert([{\n        notes: iterationText\n      }]).single();\n      if (error) {\n        console.error('Error saving iteration notes:', error);\n        setMessage(`Error: ${error.message}`);\n      } else {\n        alert('Iteration notes saved successfully!');\n      }\n    } catch (err) {\n      console.error('Unexpected error:', err);\n      setMessage(`Error: ${err.message}`);\n    }\n  };\n\n  // Category selection logic\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n    // e.g., fetch a new set of ingredients based on category\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-row\",\n      children: ['Beard Oil 7', 'Beard Balm 9', 'Mustache Wax 2', 'Hand Cream 1', 'Hair Rinse 1', 'Foaming Hand Soap 1'].map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCategorySelect(cat),\n        style: {\n          backgroundColor: cat === selectedCategory ? '#555' : ''\n        },\n        children: cat\n      }, cat, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Current Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Distilled Water \\u2013 1 cup (240 mL)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Liquid Castile Soap \\u2013 2 tablespoons (30 mL)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sweet Almond Oil \\u2013 1 teaspoon (5 mL)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Essential Oils \\u2013 10\\u201315 drops\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Next Iteration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: iterationText,\n          onChange: e => setIterationText(e.target.value),\n          placeholder: \"Describe your next iteration...\",\n          style: {\n            width: '100%',\n            minHeight: '80px',\n            marginBottom: '0.5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleGetAiSuggestion,\n            children: \"Get AI Suggestion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCommit,\n            children: \"Commit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditableTable, {\n        editMode: editMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(RecipeIteration, \"W32H76Xjk/7ubFyETrRCJXqi7Vw=\");\n_c = RecipeIteration;\nexport default RecipeIteration;\nvar _c;\n$RefreshReg$(_c, \"RecipeIteration\");","map":{"version":3,"names":["React","useState","EditableTable","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipeIteration","editMode","_s","iterationText","setIterationText","selectedCategory","setSelectedCategory","message","setMessage","handleGetAiSuggestion","response","fetch","method","headers","body","JSON","stringify","prompt","data","json","suggestion","err","console","error","handleCommit","from","insert","notes","single","alert","handleCategorySelect","category","children","className","map","cat","onClick","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","width","minHeight","marginBottom","display","gap","color","_c","$RefreshReg$"],"sources":["/Users/ryankrammes/kraft_ai/src/components/RecipeIteration.js"],"sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport EditableTable from './EditableTable';\nimport { supabase } from '../supabaseClient';\n\nfunction RecipeIteration({ editMode }: { editMode: boolean }): React$Node {\n  // For AI iteration text\n  const [iterationText, setIterationText] = useState('');\n  // For possible category selection\n  const [selectedCategory, setSelectedCategory] = useState('Beard Oil 7');\n  const [message, setMessage] = useState(null);\n\n  // Example AI suggestion call\n  const handleGetAiSuggestion = async () => {\n    try {\n      const response = await fetch('https://example.com/ai-suggest', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ prompt: iterationText }),\n      });\n      const data = await response.json();\n      setIterationText(data.suggestion || '');\n    } catch (err) {\n      console.error('Error fetching AI suggestion:', err);\n      setMessage(`Error: ${err.message}`);\n    }\n  };\n\n  // Example commit logic to store iteration notes\n  const handleCommit = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('Iteration_Notes')\n        .insert([{ notes: iterationText }])\n        .single();\n      if (error) {\n        console.error('Error saving iteration notes:', error);\n        setMessage(`Error: ${error.message}`);\n      } else {\n        alert('Iteration notes saved successfully!');\n      }\n    } catch (err) {\n      console.error('Unexpected error:', err);\n      setMessage(`Error: ${err.message}`);\n    }\n  };\n\n  // Category selection logic\n  const handleCategorySelect = (category) => {\n    setSelectedCategory(category);\n    // e.g., fetch a new set of ingredients based on category\n  };\n\n  return (\n    <>\n      {/* Category row with static placeholders */}\n      <div className=\"category-row\">\n        {[\n          'Beard Oil 7',\n          'Beard Balm 9',\n          'Mustache Wax 2',\n          'Hand Cream 1',\n          'Hair Rinse 1',\n          'Foaming Hand Soap 1',\n        ].map((cat) => (\n          <button\n            key={cat}\n            onClick={() => handleCategorySelect(cat)}\n            style={{ backgroundColor: cat === selectedCategory ? '#555' : '' }}\n          >\n            {cat}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"panel-container\">\n        <div className=\"card\">\n          <h2>Current Ingredients</h2>\n          <p>Distilled Water â€“ 1 cup (240 mL)</p>\n          <p>Liquid Castile Soap â€“ 2 tablespoons (30 mL)</p>\n          <p>Sweet Almond Oil â€“ 1 teaspoon (5 mL)</p>\n          <p>Essential Oils â€“ 10â€“15 drops</p>\n        </div>\n\n        <div className=\"card\">\n          <h2>Next Iteration</h2>\n          <textarea\n            value={iterationText}\n            onChange={(e) => setIterationText(e.target.value)}\n            placeholder=\"Describe your next iteration...\"\n            style={{ width: '100%', minHeight: '80px', marginBottom: '0.5rem' }}\n          />\n          <div style={{ display: 'flex', gap: '0.5rem' }}>\n            <button onClick={handleGetAiSuggestion}>Get AI Suggestion</button>\n            <button onClick={handleCommit}>Commit</button>\n          </div>\n          {message && <p style={{ color: 'red' }}>{message}</p>}\n        </div>\n\n        <EditableTable editMode={editMode} />\n      </div>\n    </>\n  );\n}\n\nexport default RecipeIteration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}