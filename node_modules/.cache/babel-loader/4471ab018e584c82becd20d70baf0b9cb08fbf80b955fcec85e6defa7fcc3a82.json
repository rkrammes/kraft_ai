{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrammes/kraft_ai/src/components/RecipeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const isEditing = Boolean(id);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (isEditing) {\n      const fetchRecipe = async () => {\n        const {\n          data,\n          error\n        } = await supabase.from('recipes').select('*').eq('id', id).single();\n        if (error) {\n          setError(error.message);\n        } else {\n          setTitle(data.title);\n          setDescription(data.description);\n        }\n      };\n      fetchRecipe();\n    }\n  }, [id, isEditing]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      if (isEditing) {\n        const {\n          error\n        } = await supabase.from('recipes').update({\n          title,\n          description\n        }).eq('id', id);\n        if (error) throw error;\n        alert('Recipe updated successfully!');\n      } else {\n        const {\n          error\n        } = await supabase.from('recipes').insert([{\n          title,\n          description\n        }]);\n        if (error) throw error;\n        alert('Recipe added successfully!');\n      }\n      navigate('/');\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isEditing ? 'Edit Recipe' : 'Add Recipe'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Saving...' : isEditing ? 'Update Recipe' : 'Add Recipe'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeForm, \"ol4V8aSVeISvIGUfajXHZUfg/sg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RecipeForm;\nexport default RecipeForm;\nvar _c;\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","supabase","jsxDEV","_jsxDEV","RecipeForm","_s","id","navigate","isEditing","Boolean","title","setTitle","description","setDescription","loading","setLoading","error","setError","fetchRecipe","data","from","select","eq","single","message","handleSubmit","e","preventDefault","update","alert","insert","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","disabled","style","color","_c","$RefreshReg$"],"sources":["/Users/ryankrammes/kraft_ai/src/components/RecipeForm.js"],"sourcesContent":["// @flow\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\n\nconst RecipeForm = (): React$Node => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const isEditing = Boolean(id);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (isEditing) {\n      const fetchRecipe = async () => {\n        const { data, error } = await supabase\n          .from('recipes')\n          .select('*')\n          .eq('id', id)\n          .single();\n        if (error) {\n          setError(error.message);\n        } else {\n          setTitle(data.title);\n          setDescription(data.description);\n        }\n      };\n      fetchRecipe();\n    }\n  }, [id, isEditing]);\n\n  const handleSubmit = async (e: SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      if (isEditing) {\n        const { error } = await supabase\n          .from('recipes')\n          .update({ title, description })\n          .eq('id', id);\n        if (error) throw error;\n        alert('Recipe updated successfully!');\n      } else {\n        const { error } = await supabase\n          .from('recipes')\n          .insert([{ title, description }]);\n        if (error) throw error;\n        alert('Recipe added successfully!');\n      }\n      navigate('/');\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>{isEditing ? 'Edit Recipe' : 'Add Recipe'}</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"description\">Description:</label>\n          <textarea\n            id=\"description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Saving...' : (isEditing ? 'Update Recipe' : 'Add Recipe')}\n        </button>\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n      </form>\n    </div>\n  );\n};\n\nexport default RecipeForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}