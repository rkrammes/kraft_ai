{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrammes/kraft_ai/src/components/RecipeDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchRecipe() {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('recipes').select('*').eq('id', id).single();\n        if (error) throw error;\n        setRecipe(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchRecipe();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading recipe details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  if (!recipe) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No recipe found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: recipe.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: recipe.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeDetail, \"Mlbof7TxLnZ/ZZkojbzJzibE3gE=\", false, function () {\n  return [useParams];\n});\n_c = RecipeDetail;\nexport default RecipeDetail;\nvar _c;\n$RefreshReg$(_c, \"RecipeDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","supabase","jsxDEV","_jsxDEV","RecipeDetail","_s","id","recipe","setRecipe","loading","setLoading","error","setError","fetchRecipe","data","from","select","eq","single","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","title","description","_c","$RefreshReg$"],"sources":["/Users/ryankrammes/kraft_ai/src/components/RecipeDetail.js"],"sourcesContent":["// @flow\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\n\nconst RecipeDetail = (): React$Node => {\n  const { id } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchRecipe() {\n      try {\n        const { data, error } = await supabase\n          .from('recipes')\n          .select('*')\n          .eq('id', id)\n          .single();\n        if (error) throw error;\n        setRecipe(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchRecipe();\n  }, [id]);\n\n  if (loading) return <div>Loading recipe details...</div>;\n  if (error) return <div style={{ color: 'red' }}>Error: {error}</div>;\n  if (!recipe) return <div>No recipe found.</div>;\n\n  return (\n    <div>\n      <h2>{recipe.title}</h2>\n      <p>{recipe.description}</p>\n    </div>\n  );\n};\n\nexport default RecipeDetail;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,YAAY,GAAGA,CAAA,KAAkB;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,eAAec,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAM;UAAEC,IAAI;UAAEH;QAAM,CAAC,GAAG,MAAMV,QAAQ,CACnCc,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEX,EAAE,CAAC,CACZY,MAAM,CAAC,CAAC;QACX,IAAIP,KAAK,EAAE,MAAMA,KAAK;QACtBH,SAAS,CAACM,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZP,QAAQ,CAACO,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRV,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IACAG,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,IAAIG,OAAO,EAAE,oBAAON,OAAA;IAAAkB,QAAA,EAAK;EAAyB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACxD,IAAId,KAAK,EAAE,oBAAOR,OAAA;IAAKuB,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAN,QAAA,GAAC,SAAO,EAACV,KAAK;EAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EACpE,IAAI,CAAClB,MAAM,EAAE,oBAAOJ,OAAA;IAAAkB,QAAA,EAAK;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE/C,oBACEtB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAKd,MAAM,CAACqB;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBtB,OAAA;MAAAkB,QAAA,EAAId,MAAM,CAACsB;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnCID,YAAY;EAAA,QACDJ,SAAS;AAAA;AAAA8B,EAAA,GADpB1B,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}