{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrammes/kraft_ai/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from './theme';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nfunction Root() {\n  _s();\n  // handle local darkMode state here, pass it to <App>\n  const [darkMode, setDarkMode] = useState(false);\n\n  // pick which theme tokens to use\n  const theme = darkMode ? darkTheme : lightTheme;\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(App, {\n        darkMode: darkMode,\n        setDarkMode: setDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Root, \"D2+2tCNohYwQ9K/tGnxPgGRQSlM=\");\n_c = Root;\nroot.render(/*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"names":["React","useState","ReactDOM","ThemeProvider","darkTheme","lightTheme","App","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","Root","_s","darkMode","setDarkMode","theme","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","render","$RefreshReg$"],"sources":["/Users/ryankrammes/kraft_ai/src/index.js"],"sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from './theme';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nfunction Root() {\n  // handle local darkMode state here, pass it to <App>\n  const [darkMode, setDarkMode] = useState(false);\n\n  // pick which theme tokens to use\n  const theme = darkMode ? darkTheme : lightTheme;\n\n  return (\n    <React.StrictMode>\n      <ThemeProvider theme={theme}>\n        <App darkMode={darkMode} setDarkMode={setDarkMode} />\n      </ThemeProvider>\n    </React.StrictMode>\n  );\n}\n\nroot.render(<Root />);"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,SAAS,EAAEC,UAAU,QAAQ,SAAS;AAC/C,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,IAAI,GAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjE,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAMgB,KAAK,GAAGF,QAAQ,GAAGX,SAAS,GAAGC,UAAU;EAE/C,oBACEG,OAAA,CAACR,KAAK,CAACkB,UAAU;IAAAC,QAAA,eACfX,OAAA,CAACL,aAAa;MAACc,KAAK,EAAEA,KAAM;MAAAE,QAAA,eAC1BX,OAAA,CAACF,GAAG;QAACS,QAAQ,EAAEA,QAAS;QAACC,WAAW,EAAEA;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEvB;AAACT,EAAA,CAdQD,IAAI;AAAAW,EAAA,GAAJX,IAAI;AAgBbJ,IAAI,CAACgB,MAAM,cAACjB,OAAA,CAACK,IAAI;EAAAO,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAC,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}